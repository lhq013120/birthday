<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hm.birthday.admin.worker.dao.WorkerMapper" >
  <resultMap id="BaseResultMap" type="com.hm.birthday.entity.Worker" >
	<id column="id" property="id" jdbcType="INTEGER" />
	<result column="phone_num" property="phoneNum" jdbcType="VARCHAR" />
	<result column="work_name" property="workName" jdbcType="VARCHAR" />
	<result column="password" property="password" jdbcType="VARCHAR" />
	<result column="birthday" property="birthday" jdbcType="DATE" />
	<result column="worker_role" property="workerRole" jdbcType="VARCHAR" />
	<result column="worker_img" property="workerImg" jdbcType="VARCHAR" />
	<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	<result column="crete_time" property="creteTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, phone_num, work_name, password, birthday, worker_role, worker_img, update_time, crete_time
  </sql>
  <sql id="paramsSql">
		<if test="phoneNum != null and phoneNum != '' "> and phone_num = #{phoneNum}</if>
		<if test="workName != null and workName != '' "> and work_name = #{workNm}</if>
	</sql>
  <select id="queryWithPage" resultMap="BaseResultMap" parameterType="com.hm.birthday.entity.Worker">
  		select 
  		<include refid="Base_Column_List"/>
  		from worker
  		where 1 = 1
  		<include refid="paramsSql"/> 
  		order by id
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from worker
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from worker
    where id = #{id,jdbcType=INTEGER}
  </delete>
<insert id="insert" parameterType="com.hm.birthday.entity.Worker" >
    insert into worker (id, phone_num, work_name, 
      password, birthday, worker_role, 
      worker_img, update_time, crete_time
      )
    values (#{id,jdbcType=INTEGER}, #{phoneNum,jdbcType=VARCHAR}, #{workName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{workerRole,jdbcType=VARCHAR}, 
      #{workerImg,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{creteTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hm.birthday.entity.Worker" >
    update worker
    <set >
      <if test="phoneNum != null" >
        phone_num = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="workName != null" >
        work_name = #{workName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="workerRole != null" >
        worker_role = #{workerRole,jdbcType=VARCHAR},
      </if>
      <if test="workerImg != null" >
        worker_img = #{workerImg,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creteTime != null" >
        crete_time = #{creteTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hm.birthday.entity.Worker" >
    update worker
    set phone_num = #{phoneNum,jdbcType=VARCHAR},
      work_name = #{workName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      worker_role = #{workerRole,jdbcType=VARCHAR},
      worker_img = #{workerImg,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      crete_time = #{creteTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>