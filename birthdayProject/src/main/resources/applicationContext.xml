<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-3.0.xsd"
		default-lazy-init="true">
	<context:annotation-config />
	<context:component-scan base-package="com.hm.birthday"/>
	
	<!-- 定义事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<property name="globalRollbackOnParticipationFailure" value="false"/>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- mybatis-spring整合 -->
	<!-- 配置双数据源或多数据源时sqlSessionFactory必须重命名，否则会导致配置失效 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-cfg.xml" />
		<!-- 扫描classpath:mapper下所有xml -->
		<property name="mapperLocations" value="classpath*:mapper/**/*Mapper.xml" />
	</bean>
	<!-- 自动扫描mybatis映射 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描所有com.ninefbank.smallpay.**.dao下的java类 -->
		<property name="basePackage" value="com.hm.birthday.**.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	<context:property-placeholder location="classpath:cfg.properties" />
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${db.driverClassName}"/>
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<property name="initialSize" value="15" />
		<property name="minIdle" value="15" />
		<property name="maxActive" value="120" />
		<property name="maxWait" value="30000" />
		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
		<!-- 设置超过时间限制是否回收(单位为妙) --> 
		<property name="removeAbandoned" value="true"/>
		<property name="removeAbandonedTimeout" value="3000"/>
		<!-- 关闭abanded连接时输出错误日志 -->  
        <property name="logAbandoned" value="true" />  
	</bean>
	
</beans>